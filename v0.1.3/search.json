[{"path":[]},{"path":"https://insightsengineering.github.io/tern.gee/CODE_OF_CONDUCT.html","id":"our-pledge","dir":"","previous_headings":"","what":"Our Pledge","title":"Contributor Covenant Code of Conduct","text":"members, contributors, leaders pledge make participation community harassment-free experience everyone, regardless age, body size, visible invisible disability, ethnicity, sex characteristics, gender identity expression, level experience, education, socio-economic status, nationality, personal appearance, race, caste, color, religion, sexual identity orientation. pledge act interact ways contribute open, welcoming, diverse, inclusive, healthy community.","code":""},{"path":"https://insightsengineering.github.io/tern.gee/CODE_OF_CONDUCT.html","id":"our-standards","dir":"","previous_headings":"","what":"Our Standards","title":"Contributor Covenant Code of Conduct","text":"Examples behavior contributes positive environment community include: Demonstrating empathy kindness toward people respectful differing opinions, viewpoints, experiences Giving gracefully accepting constructive feedback Accepting responsibility apologizing affected mistakes, learning experience Focusing best just us individuals, overall community Examples unacceptable behavior include: use sexualized language imagery, sexual attention advances kind Trolling, insulting derogatory comments, personal political attacks Public private harassment Publishing others‚Äô private information, physical email address, without explicit permission conduct reasonably considered inappropriate professional setting","code":""},{"path":"https://insightsengineering.github.io/tern.gee/CODE_OF_CONDUCT.html","id":"enforcement-responsibilities","dir":"","previous_headings":"","what":"Enforcement Responsibilities","title":"Contributor Covenant Code of Conduct","text":"Community leaders responsible clarifying enforcing standards acceptable behavior take appropriate fair corrective action response behavior deem inappropriate, threatening, offensive, harmful. Community leaders right responsibility remove, edit, reject comments, commits, code, wiki edits, issues, contributions aligned Code Conduct, communicate reasons moderation decisions appropriate.","code":""},{"path":"https://insightsengineering.github.io/tern.gee/CODE_OF_CONDUCT.html","id":"scope","dir":"","previous_headings":"","what":"Scope","title":"Contributor Covenant Code of Conduct","text":"Code Conduct applies within community spaces, also applies individual officially representing community public spaces. Examples representing community include using official e-mail address, posting via official social media account, acting appointed representative online offline event.","code":""},{"path":"https://insightsengineering.github.io/tern.gee/CODE_OF_CONDUCT.html","id":"enforcement","dir":"","previous_headings":"","what":"Enforcement","title":"Contributor Covenant Code of Conduct","text":"Instances abusive, harassing, otherwise unacceptable behavior may reported community leaders responsible enforcement [INSERT CONTACT METHOD]. complaints reviewed investigated promptly fairly. community leaders obligated respect privacy security reporter incident.","code":""},{"path":"https://insightsengineering.github.io/tern.gee/CODE_OF_CONDUCT.html","id":"enforcement-guidelines","dir":"","previous_headings":"","what":"Enforcement Guidelines","title":"Contributor Covenant Code of Conduct","text":"Community leaders follow Community Impact Guidelines determining consequences action deem violation Code Conduct:","code":""},{"path":"https://insightsengineering.github.io/tern.gee/CODE_OF_CONDUCT.html","id":"id_1-correction","dir":"","previous_headings":"Enforcement Guidelines","what":"1. Correction","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Use inappropriate language behavior deemed unprofessional unwelcome community. Consequence: private, written warning community leaders, providing clarity around nature violation explanation behavior inappropriate. public apology may requested.","code":""},{"path":"https://insightsengineering.github.io/tern.gee/CODE_OF_CONDUCT.html","id":"id_2-warning","dir":"","previous_headings":"Enforcement Guidelines","what":"2. Warning","title":"Contributor Covenant Code of Conduct","text":"Community Impact: violation single incident series actions. Consequence: warning consequences continued behavior. interaction people involved, including unsolicited interaction enforcing Code Conduct, specified period time. includes avoiding interactions community spaces well external channels like social media. Violating terms may lead temporary permanent ban.","code":""},{"path":"https://insightsengineering.github.io/tern.gee/CODE_OF_CONDUCT.html","id":"id_3-temporary-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"3. Temporary Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: serious violation community standards, including sustained inappropriate behavior. Consequence: temporary ban sort interaction public communication community specified period time. public private interaction people involved, including unsolicited interaction enforcing Code Conduct, allowed period. Violating terms may lead permanent ban.","code":""},{"path":"https://insightsengineering.github.io/tern.gee/CODE_OF_CONDUCT.html","id":"id_4-permanent-ban","dir":"","previous_headings":"Enforcement Guidelines","what":"4. Permanent Ban","title":"Contributor Covenant Code of Conduct","text":"Community Impact: Demonstrating pattern violation community standards, including sustained inappropriate behavior, harassment individual, aggression toward disparagement classes individuals. Consequence: permanent ban sort public interaction within community.","code":""},{"path":"https://insightsengineering.github.io/tern.gee/CODE_OF_CONDUCT.html","id":"attribution","dir":"","previous_headings":"","what":"Attribution","title":"Contributor Covenant Code of Conduct","text":"Code Conduct adapted Contributor Covenant, version 2.1, available https://www.contributor-covenant.org/version/2/1/code_of_conduct.html. Community Impact Guidelines inspired Mozilla‚Äôs code conduct enforcement ladder. answers common questions code conduct, see FAQ https://www.contributor-covenant.org/faq. Translations available https://www.contributor-covenant.org/translations.","code":""},{"path":"https://insightsengineering.github.io/tern.gee/CONTRIBUTING.html","id":null,"dir":"","previous_headings":"","what":"Contribution Guidelines","title":"Contribution Guidelines","text":"üôè Thank taking time contribute! input deeply valued, whether issue, pull request, even feedback, regardless size, content scope.","code":""},{"path":"https://insightsengineering.github.io/tern.gee/CONTRIBUTING.html","id":"table-of-contents","dir":"","previous_headings":"","what":"Table of contents","title":"Contribution Guidelines","text":"üë∂ Getting started üìî Code Conduct üóÉ License üìú Issues üö© Pull requests üëó Style guide üèÜ Recognition model ‚ùì Questions","code":""},{"path":"https://insightsengineering.github.io/tern.gee/CONTRIBUTING.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting started","title":"Contribution Guidelines","text":"Please refer project documentation brief introduction. Please also see articles within project documentation additional information.","code":""},{"path":"https://insightsengineering.github.io/tern.gee/CONTRIBUTING.html","id":"code-of-conduct","dir":"","previous_headings":"","what":"Code of Conduct","title":"Contribution Guidelines","text":"Code Conduct governs project. Participants contributors expected follow rules outlined therein.","code":""},{"path":"https://insightsengineering.github.io/tern.gee/CONTRIBUTING.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Contribution Guidelines","text":"contributions covered project‚Äôs license.","code":""},{"path":"https://insightsengineering.github.io/tern.gee/CONTRIBUTING.html","id":"issues","dir":"","previous_headings":"","what":"Issues","title":"Contribution Guidelines","text":"use GitHub track issues, feature requests, bugs. submitting new issue, please check issue already reported. issue already exists, please upvote existing issue üëç. new feature requests, please elaborate context benefit feature users, developers, relevant personas.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/tern.gee/CONTRIBUTING.html","id":"github-flow","dir":"","previous_headings":"Pull requests","what":"GitHub Flow","title":"Contribution Guidelines","text":"repository uses GitHub Flow model collaboration. submit pull request: Create branch Please see branch naming convention . don‚Äôt write access repository, please fork . Make changes Make sure code passes checks imposed GitHub Actions well documented well tested unit tests sufficiently covering changes introduced Create pull request (PR) pull request description, please link relevant issue (), provide detailed description change, include assumptions. Address review comments, Post approval Merge PR write access. Otherwise, reviewer merge PR behalf. Pat back Congratulations! üéâ now official contributor project! grateful contribution.","code":""},{"path":"https://insightsengineering.github.io/tern.gee/CONTRIBUTING.html","id":"branch-naming-convention","dir":"","previous_headings":"Pull requests","what":"Branch naming convention","title":"Contribution Guidelines","text":"Suppose changes related current issue current project; please name branch follows: <issue_id>_<short_description>. Please use underscore (_) delimiter word separation. example, 420_fix_ui_bug suitable branch name change resolving UI-related bug reported issue number 420 current project. change affects multiple repositories, please name branches follows: <issue_id>_<issue_repo>_<short description>. example, 69_awesomeproject_fix_spelling_error reference issue 69 reported project awesomeproject aims resolve one spelling errors multiple (likely related) repositories.","code":""},{"path":"https://insightsengineering.github.io/tern.gee/CONTRIBUTING.html","id":"monorepo-and-stageddependencies","dir":"","previous_headings":"Pull requests","what":"monorepo and staged.dependencies","title":"Contribution Guidelines","text":"Sometimes might need change upstream dependent package(s) able submit meaningful change. using staged.dependencies functionality simulate monorepo behavior. dependency configuration already specified project‚Äôs staged_dependencies.yaml file. need name feature branches appropriately. exception branch naming convention described . Please refer staged.dependencies package documentation details.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/tern.gee/CONTRIBUTING.html","id":"r--package-versions","dir":"","previous_headings":"Pull requests > Recommended development environment & tools","what":"R & package versions","title":"Contribution Guidelines","text":"continuously test packages newest R version along recent dependencies CRAN BioConductor. recommend working environment also set way. can find details R version packages used R CMD check GitHub Action execution log - step prints R sessionInfo(). discover bugs older R versions older set dependencies, please create relevant bug reports.","code":""},{"path":"https://insightsengineering.github.io/tern.gee/CONTRIBUTING.html","id":"pre-commit","dir":"","previous_headings":"Pull requests > Recommended development environment & tools","what":"pre-commit","title":"Contribution Guidelines","text":"highly recommend use pre-commit tool combined R hooks pre-commit execute checks committing pushing changes. Pre-commit hooks already available repository‚Äôs .pre-commit-config.yaml file.","code":""},{"path":"https://insightsengineering.github.io/tern.gee/CONTRIBUTING.html","id":"style-guide","dir":"","previous_headings":"","what":"Style guide","title":"Contribution Guidelines","text":"repository follows standard tidyverse style guide uses lintr lint checks. Customized lint configurations available repository‚Äôs .lintr file.","code":""},{"path":"https://insightsengineering.github.io/tern.gee/CONTRIBUTING.html","id":"recognition-model","dir":"","previous_headings":"","what":"Recognition model","title":"Contribution Guidelines","text":"mentioned previously, contributions deeply valued appreciated. contribution data available part repository insights, recognize significant contribution hence add contributor package authors list, following rules enforced: Minimum 5% lines code authored* (determined git blame query) top 5 contributors terms number commits lines added lines removed* *Excluding auto-generated code, including limited roxygen comments renv.lock files. package maintainer also reserves right adjust criteria recognize contributions.","code":""},{"path":"https://insightsengineering.github.io/tern.gee/CONTRIBUTING.html","id":"questions","dir":"","previous_headings":"","what":"Questions","title":"Contribution Guidelines","text":"questions regarding contribution guidelines, please contact package/repository maintainer.","code":""},{"path":[]},{"path":[]},{"path":"https://insightsengineering.github.io/tern.gee/SECURITY.html","id":"reporting-security-issues","dir":"","previous_headings":"","what":"Reporting Security Issues","title":"Security Policy","text":"believe found security vulnerability repositories organization, please report us coordinated disclosure. Please report security vulnerabilities public GitHub issues, discussions, pull requests. Instead, please send email vulnerability.management[@]roche.com. Please include much information listed can help us better understand resolve issue: type issue (e.g., buffer overflow, SQL injection, cross-site scripting) Full paths source file(s) related manifestation issue location affected source code (tag/branch/commit direct URL) special configuration required reproduce issue Step--step instructions reproduce issue Proof--concept exploit code (possible) Impact issue, including attacker might exploit issue information help us triage report quickly.","code":""},{"path":"https://insightsengineering.github.io/tern.gee/SECURITY.html","id":"data-security-standards-dss","dir":"","previous_headings":"","what":"Data Security Standards (DSS)","title":"Security Policy","text":"Please make sure reporting issues form bug, feature, pull request, sensitive information PII, PHI, PCI completely removed text attachments, including pictures videos.","code":""},{"path":"https://insightsengineering.github.io/tern.gee/articles/tern-gee.html","id":"introduction","dir":"Articles","previous_headings":"","what":"Introduction","title":"Introduction to tern.gee","text":"Generalized Estimating Equations (GEEs) mainly used modeling longitudinal binary count endpoints clinical trials. Within package, GEE used estimate parameters generalized linear model includes fixed effects variables: treatment arm, categorical visit, covariates adjustment (e.g.¬†age, sex, race). covariance structure residuals can take different forms. Often, unstructured (.e.¬†saturated parameterization) covariance matrix assumed can represented random effects model. vignette shows general purpose syntax tern.gee R package provides interface GEEs within tern framework. package builds upon GEE functionality included geepack geeasy R packages. Within package, implemented GEEs R way can easily embedded shiny application. See teal.modules.clinical::tm_a_gee() teal.modules.clinical package details using code inside shiny application.","code":""},{"path":"https://insightsengineering.github.io/tern.gee/articles/tern-gee.html","id":"example","dir":"Articles","previous_headings":"","what":"Example","title":"Introduction to tern.gee","text":"demonstrate tern.gee package functionality can used fit GEE model tabulate output.","code":""},{"path":"https://insightsengineering.github.io/tern.gee/articles/tern-gee.html","id":"setup","dir":"Articles","previous_headings":"Example","what":"Setup","title":"Introduction to tern.gee","text":"sample dataset, fev_data, available tern.gee package consists seven variables: subject ID (USUBJID), visit number (AVISIT), treatment (ARMCD = TRT PBO), 3-category RACE, SEX, FEV1 baseline (%) (FEV1_BL), FEV1 study visits (%) (FEV1). Additionally create arbitrary binary variable FEV1_BINARY analysis takes value 1 FEV1 > 30 0 otherwise. FEV1 (forced expired volume one second) measure quickly lungs can emptied. Low levels FEV1 may indicate chronic obstructive pulmonary disease (COPD). scientific question hand whether treatment leads increase FEV1 time adjusting baseline covariates.","code":"library(tern.gee) fev_data$FEV1_BINARY <- as.integer(fev_data$FEV1 > 30) head(fev_data) #> # A tibble: 6 √ó 8 #>   USUBJID AVISIT ARMCD RACE                      SEX   FEV1_BL  FEV1 FEV1_BINARY #>   <fct>   <fct>  <fct> <fct>                     <fct>   <dbl> <dbl>       <int> #> 1 PT1     VIS1   TRT   Black or African American Fema‚Ä¶    25.3  NA            NA #> 2 PT1     VIS2   TRT   Black or African American Fema‚Ä¶    25.3  40.0           1 #> 3 PT1     VIS3   TRT   Black or African American Fema‚Ä¶    25.3  NA            NA #> 4 PT1     VIS4   TRT   Black or African American Fema‚Ä¶    25.3  20.5           0 #> 5 PT2     VIS1   PBO   Asian                     Male     45.0  NA            NA #> 6 PT2     VIS2   PBO   Asian                     Male     45.0  31.5           1"},{"path":"https://insightsengineering.github.io/tern.gee/articles/tern-gee.html","id":"model-fitting","dir":"Articles","previous_headings":"Example","what":"Model Fitting","title":"Introduction to tern.gee","text":"Fitting GEE model easy use tern.gee. default, model fitting function fit_gee() assumes unstructured correlation proportional weights calculating LS means, fits logistic regression model. Currently logistic regression implemented available regression model using fit_gee(). future package extended include models Poisson regression, etc. alternative options. resulting object consists many pieces information pertaining model estimated coefficients, correlation parameters, etc. Additionally, lsmeans() function tern.gee can used extract least squares means GEE model created using fit_gee(). Based output, evidence support treatment leads increase FEV1 placebo. GEE model can refined using different correlation structures weighting schemes.","code":"fev_fit <- fit_gee(   vars = list(     response = \"FEV1_BINARY\",     covariates = c(\"RACE\", \"SEX\", \"FEV1_BL\"),     arm = \"ARMCD\",     id = \"USUBJID\",     visit = \"AVISIT\"   ),   data = fev_data ) #> Registered S3 methods overwritten by 'geeasy': #>   method       from    #>   drop1.geeglm MESS    #>   drop1.geem   MESS    #>   plot.geeglm  geepack fev_fit #>  #> Call: #> geeasy::geelm(formula = formula, id = .id, waves = .waves, data = data,  #>     family = family$object, corstr = cor_details$str, Mv = cor_details$mv,  #>     control = family$control) #>  #> Coefficients: #>                   (Intercept)                      ARMCDTRT  #>                   -0.20061892                    0.74524533  #> RACEBlack or African American                     RACEWhite  #>                    0.11627212                    1.38199917  #>                     SEXFemale                       FEV1_BL  #>                   -0.14521343                    0.05257141  #>  #> Degrees of Freedom: 537 Total (i.e. Null);  531 Residual #>  #> Scale is fixed. #>  #> Correlation:  Structure = unstructured    Link = identity  #> Estimated Correlation Parameters: #> [1] -0.046922366 -0.130175920  0.071402079 -0.126586549 -0.062642853 #> [6]  0.006795836 #>  #> Number of clusters:   197   Maximum cluster size: 4 fev_lsmeans <- lsmeans(fev_fit, data = fev_data) fev_lsmeans #>   ARMCD  prop_est prop_est_se prop_lower_cl prop_upper_cl   n   or_est #> 1   PBO 0.9054200  0.01904206     0.8609409     0.9367178 420       NA #> 2   TRT 0.9527634  0.01193578     0.9230409     0.9713629 380 2.106958 #>   or_lower_cl or_upper_cl log_or_est log_or_lower_cl log_or_upper_cl conf_level #> 1          NA          NA         NA              NA              NA       0.95 #> 2    1.127384    3.937677  0.7452453       0.1198996        1.370591       0.95"},{"path":"https://insightsengineering.github.io/tern.gee/articles/tern-gee.html","id":"tabulation","dir":"Articles","previous_headings":"Example","what":"Tabulation","title":"Introduction to tern.gee","text":"fitting GEE model extracting LS means may want display results table. tern.gee package contains functionality summarize results lsmeans() object rtable structure, using additional functions rtables package. First create table fev_counts get number unique subjects receiving treatment. counts displayed header table column names specifying show_colcounts = TRUE initializing table via basic_table() function. table split arm (ARMCD), PBO specified reference group compare TRT group . summarize_gee_logistic() function tern.gee applied. Finally, build_table() function builds rtable using LS means dataset fev_counts providing counts unique subjects arm.","code":"fev_counts <- fev_data %>%   dplyr::select(USUBJID, ARMCD) %>%   unique()  fev_gee_table <- basic_table(show_colcounts = TRUE) %>%   split_cols_by(\"ARMCD\", ref_group = \"PBO\") %>%   summarize_gee_logistic() %>%   build_table(fev_lsmeans, alt_counts_df = fev_counts)  fev_gee_table #>                                     PBO            TRT      #>                                   (N=105)         (N=95)    #> ‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî #> n                                   420            380      #> Adjusted Mean Proportion (SE)   0.91 (0.02)    0.95 (0.01)  #>   95% CI                        (0.86, 0.94)   (0.92, 0.97) #> Odds Ratio                                         2.11     #>   95% CI                                       (1.13, 3.94) #> Log Odds Ratio                                     0.75     #>   95% CI                                       (0.12, 1.37)"},{"path":"https://insightsengineering.github.io/tern.gee/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Daniel Saban√©s Bov√©. Author, maintainer. Joe Zhu. Author. Emily de la Rua. Author. F. Hoffmann-La Roche AG. Copyright holder, funder.","code":""},{"path":"https://insightsengineering.github.io/tern.gee/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Saban√©s Bov√© D, Zhu J, de la Rua E (2023). tern.gee: Tables Graphs Generalized Estimating Equations (GEE) Model Fits. R package version 0.1.3, https://github.com/insightsengineering/tern.gee/.","code":"@Manual{,   title = {tern.gee: Tables and Graphs for Generalized Estimating Equations (GEE) Model Fits},   author = {Daniel {Saban√©s Bov√©} and Joe Zhu and Emily {de la Rua}},   year = {2023},   note = {R package version 0.1.3},   url = {https://github.com/insightsengineering/tern.gee/}, }"},{"path":[]},{"path":"https://insightsengineering.github.io/tern.gee/index.html","id":"overview","dir":"","previous_headings":"","what":"Overview","title":"Tables and Graphs for Generalized Estimating Equations (GEE) Model\n    Fits","text":"tern.gee provides interface generalized estimating equations (GEE) within tern framework produce commonly used tables (using rtables) graphs. builds R-package geepack actual GEE calculations.","code":""},{"path":"https://insightsengineering.github.io/tern.gee/index.html","id":"when-to-use-this-package","dir":"","previous_headings":"","what":"When to use this package","title":"Tables and Graphs for Generalized Estimating Equations (GEE) Model\n    Fits","text":"like use tern framework tabulation graphs, package ideal GEE fits. However use another reporting framework better directly use geepack perform tabulation plots differently.","code":""},{"path":"https://insightsengineering.github.io/tern.gee/index.html","id":"main-features","dir":"","previous_headings":"","what":"Main Features","title":"Tables and Graphs for Generalized Estimating Equations (GEE) Model\n    Fits","text":"Fitting GEE models continuous longitudinal data collected several time points (called visits) optionally treatment arms. Tabulation least square means per visit treatment arm. Tabulation covariance matrix estimate.","code":""},{"path":"https://insightsengineering.github.io/tern.gee/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Tables and Graphs for Generalized Estimating Equations (GEE) Model\n    Fits","text":"tern.gee available CRAN can install latest released version : can install latest development version directly GitHub running following: Note recommended create use GITHUB_PAT installing GitHub.","code":"install.packages(\"tern.gee\") if (!require(\"remotes\")) install.packages(\"remotes\") remotes::install_github(\"insightsengineering/tern.gee\")"},{"path":"https://insightsengineering.github.io/tern.gee/index.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting started","title":"Tables and Graphs for Generalized Estimating Equations (GEE) Model\n    Fits","text":"can get started trying example: specifies GEE FEV1_BINARY outcome RACE SEX covariates subjects identified USUBJID treatment arm ARMCD observed time points identified AVISIT fev_data data set. default, logistic regression used unstructured covariance matrix assumed. least square means assume equal weights factor combinations. information GEE models rtables tables created see introduction vignette.","code":"library(tern.gee)  fev_data$FEV1_BINARY <- as.integer(fev_data$FEV1 > 30) fev_counts <- fev_data %>%   dplyr::select(USUBJID, ARMCD) %>%   unique()  gee_fit <- fit_gee(   vars = list(     response = \"FEV1_BINARY\",     covariates = c(\"RACE\", \"SEX\"),     arm = \"ARMCD\",     id = \"USUBJID\",     visit = \"AVISIT\"   ),   data = fev_data )  lsmeans_df <- lsmeans(gee_fit, data = fev_data)  basic_table(show_colcounts = TRUE) %>%   split_cols_by(\"ARMCD\", ref_group = \"PBO\") %>%   summarize_gee_logistic() %>%   build_table(lsmeans_df, alt_counts_df = fev_counts)"},{"path":[]},{"path":[]},{"path":[]},{"path":"https://insightsengineering.github.io/tern.gee/reference/fev_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Example dataset for tern.gee package. ‚Äî fev_data","title":"Example dataset for tern.gee package. ‚Äî fev_data","text":"Measurements FEV1 (forced expired volume one second) measure quickly lungs can emptied. Low levels FEV1 may indicate chronic obstructive pulmonary disease (COPD).","code":""},{"path":"https://insightsengineering.github.io/tern.gee/reference/fev_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example dataset for tern.gee package. ‚Äî fev_data","text":"","code":"fev_data"},{"path":"https://insightsengineering.github.io/tern.gee/reference/fev_data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example dataset for tern.gee package. ‚Äî fev_data","text":"tibble 800 rows 7 variables: USUBJID: unique subject identifier. AVISIT: visit number. ARMCD: treatment, TRT PBO. RACE: 3-category race. SEX: sex. FEV1_BL: FEV1 baseline (%). FEV1: FEV1 study visits.","code":""},{"path":"https://insightsengineering.github.io/tern.gee/reference/fit_gee.html","id":null,"dir":"Reference","previous_headings":"","what":"Fit a GEE Model ‚Äî fit_gee","title":"Fit a GEE Model ‚Äî fit_gee","text":"Fit GEE Model","code":""},{"path":"https://insightsengineering.github.io/tern.gee/reference/fit_gee.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fit a GEE Model ‚Äî fit_gee","text":"","code":"fit_gee(   vars = vars_gee(),   data,   regression = c(\"logistic\"),   cor_struct = c(\"unstructured\", \"toeplitz\", \"compound symmetry\", \"auto-regressive\") )"},{"path":"https://insightsengineering.github.io/tern.gee/reference/fit_gee.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fit a GEE Model ‚Äî fit_gee","text":"vars (list) see vars_gee(). data (data.frame) input data. regression (string) choice regression model. cor_struct (string) assumed correlation structure.","code":""},{"path":"https://insightsengineering.github.io/tern.gee/reference/fit_gee.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fit a GEE Model ‚Äî fit_gee","text":"Object class tern_gee well specific kind regression used.","code":""},{"path":"https://insightsengineering.github.io/tern.gee/reference/fit_gee.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Fit a GEE Model ‚Äî fit_gee","text":"correlation structure can : unstructured: constraints placed correlations. toeplitz: Assumes banded correlation structure, .e. correlation two time points depends distance time indices. compound symmetry: Constant correlation time points. auto-regressive: Auto-regressive order 1 correlation matrix.","code":""},{"path":"https://insightsengineering.github.io/tern.gee/reference/fit_gee.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Fit a GEE Model ‚Äî fit_gee","text":"","code":"df <- fev_data df$AVAL <- as.integer(fev_data$FEV1 > 30)  fit_gee(vars = vars_gee(arm = \"ARMCD\"), data = df) #>  #> Call: #> geeasy::geelm(formula = formula, id = .id, waves = .waves, data = data,  #>     family = family$object, corstr = cor_details$str, Mv = cor_details$mv,  #>     control = family$control) #>  #> Coefficients: #> (Intercept)    ARMCDTRT  #>   2.0299313   0.7809108  #>  #> Degrees of Freedom: 537 Total (i.e. Null);  535 Residual #>  #> Scale is fixed. #>  #> Correlation:  Structure = unstructured    Link = identity  #> Estimated Correlation Parameters: #> [1] -0.032895921 -0.125407448  0.061961011 -0.030311479 -0.056769956 #> [6]  0.004383759 #>  #> Number of clusters:   197   Maximum cluster size: 4  #>   fit_gee(vars = vars_gee(arm = \"ARMCD\"), data = df, cor_struct = \"compound symmetry\") #>  #> Call: #> geeasy::geelm(formula = formula, id = .id, waves = .waves, data = data,  #>     family = family$object, corstr = cor_details$str, Mv = cor_details$mv,  #>     control = family$control) #>  #> Coefficients: #> (Intercept)    ARMCDTRT  #>   2.0643073   0.8111855  #>  #> Degrees of Freedom: 537 Total (i.e. Null);  535 Residual #>  #> Scale is fixed. #>  #> Correlation:  Structure = exchangeable    Link = identity  #> Estimated Correlation Parameters: #> [1] -0.03263465 #>  #> Number of clusters:   197   Maximum cluster size: 4  #>"},{"path":"https://insightsengineering.github.io/tern.gee/reference/gee_methods.html","id":null,"dir":"Reference","previous_headings":"","what":"Methods for GEE Models ‚Äî gee_methods","title":"Methods for GEE Models ‚Äî gee_methods","text":"Additional methods can simplify working GEE result object.","code":""},{"path":"https://insightsengineering.github.io/tern.gee/reference/gee_methods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Methods for GEE Models ‚Äî gee_methods","text":"","code":"# S3 method for tern_gee VarCorr(x, sigma = 1, ...)  # S3 method for tern_gee QIC(object, ...)"},{"path":"https://insightsengineering.github.io/tern.gee/reference/gee_methods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Methods for GEE Models ‚Äî gee_methods","text":"x (tern_gee) result fit_gee(). sigma optional numeric value used multiplier     standard deviations.  default x$sigma 1     depending class(x). ... optional arguments passed methods (none     methods documented ). object (tern_gee) result fit_gee().","code":""},{"path":"https://insightsengineering.github.io/tern.gee/reference/gee_methods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Methods for GEE Models ‚Äî gee_methods","text":"VarCorr() returns estimated covariance matrix, QIC() returns QIC value.","code":""},{"path":"https://insightsengineering.github.io/tern.gee/reference/lsmeans.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract Least Square Means from a GEE Model ‚Äî lsmeans","title":"Extract Least Square Means from a GEE Model ‚Äî lsmeans","text":"Extract Least Square Means GEE Model","code":""},{"path":"https://insightsengineering.github.io/tern.gee/reference/lsmeans.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract Least Square Means from a GEE Model ‚Äî lsmeans","text":"","code":"lsmeans(object, conf_level = 0.95, weights = \"proportional\", ...)  # S3 method for tern_gee_logistic lsmeans(object, conf_level = 0.95, weights = \"proportional\", ...)"},{"path":"https://insightsengineering.github.io/tern.gee/reference/lsmeans.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract Least Square Means from a GEE Model ‚Äî lsmeans","text":"object (tern_gee) result fit_gee(). conf_level (proportion) confidence level weights (string) type weights used least square means, see emmeans::emmeans() details. ... additional arguments methods","code":""},{"path":"https://insightsengineering.github.io/tern.gee/reference/lsmeans.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract Least Square Means from a GEE Model ‚Äî lsmeans","text":"data.frame least-square means contrasts. Additional classes allow dispatch downstream methods correctly, .","code":""},{"path":"https://insightsengineering.github.io/tern.gee/reference/lsmeans.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Extract Least Square Means from a GEE Model ‚Äî lsmeans","text":"","code":"df <- fev_data df$AVAL <- rbinom(n = nrow(df), size = 1, prob = 0.5) fit <- fit_gee(vars = vars_gee(arm = \"ARMCD\"), data = df)  lsmeans(fit) #>   ARMCD  prop_est prop_est_se prop_lower_cl prop_upper_cl   n    or_est #> 1   PBO 0.5086584  0.02405795     0.4615684     0.5555953 420        NA #> 2   TRT 0.4941228  0.02542517     0.4445127     0.5438489 380 0.9435112 #>   or_lower_cl or_upper_cl  log_or_est log_or_lower_cl log_or_upper_cl #> 1          NA          NA          NA              NA              NA #> 2   0.7170383    1.241514 -0.05814704       -0.332626       0.2163319 #>   conf_level #> 1       0.95 #> 2       0.95  lsmeans(fit, conf_level = 0.90, weights = \"equal\") #>   ARMCD  prop_est prop_est_se prop_lower_cl prop_upper_cl   n    or_est #> 1   PBO 0.5086584  0.02405795     0.4615684     0.5555953 420        NA #> 2   TRT 0.4941228  0.02542517     0.4445127     0.5438489 380 0.9435112 #>   or_lower_cl or_upper_cl  log_or_est log_or_lower_cl log_or_upper_cl #> 1          NA          NA          NA              NA              NA #> 2    0.749389    1.187919 -0.05814704       -0.288497        0.172203 #>   conf_level #> 1        0.9 #> 2        0.9"},{"path":"https://insightsengineering.github.io/tern.gee/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages ‚Äî reexports","title":"Objects exported from other packages ‚Äî reexports","text":"objects imported packages. Follow links see documentation. tern .rtable","code":""},{"path":"https://insightsengineering.github.io/tern.gee/reference/tabulate_gee.html","id":null,"dir":"Reference","previous_headings":"","what":"Tabulation of a GEE Model ‚Äî tabulate_gee","title":"Tabulation of a GEE Model ‚Äî tabulate_gee","text":"Functions produce tables fitted GEE produced fit_gee().","code":""},{"path":"https://insightsengineering.github.io/tern.gee/reference/tabulate_gee.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Tabulation of a GEE Model ‚Äî tabulate_gee","text":"","code":"# S3 method for tern_gee as.rtable(x, type = c(\"coef\", \"cov\"), ...)  s_lsmeans_logistic(df, .in_ref_col)  a_lsmeans_logistic(df, .in_ref_col)  summarize_gee_logistic(   lyt,   ...,   table_names = \"lsmeans_logistic_summary\",   .stats = NULL,   .formats = NULL,   .indent_mods = NULL,   .labels = NULL )"},{"path":"https://insightsengineering.github.io/tern.gee/reference/tabulate_gee.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Tabulation of a GEE Model ‚Äî tabulate_gee","text":"x object converted rtable. type (character) type table extract tern_gee object. ... additional arguments methods. df (data.frame) data set resulting lsmeans(). .in_ref_col (logical)TRUE working reference level, FALSE otherwise. lyt (layout) input layout analyses added . table_names (character) can customized case vars analyzed multiple times, avoid warnings rtables. .stats (character) statistics select table. .formats (named character list) formats statistics. .indent_mods (named integer) indent modifiers labels. .labels (named character) labels statistics (without indent).","code":""},{"path":"https://insightsengineering.github.io/tern.gee/reference/tabulate_gee.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Tabulation of a GEE Model ‚Äî tabulate_gee","text":"functions different purposes: .rtable() returns either coefficient table covariance matrix rtables object. s_lsmeans_logistic() returns several least square mean statistics GEE. a_lsmeans_logistic() formatted analysis function returns formatted statistics. summarize_gee_logistic() analyze function returns modified rtables layout.","code":""},{"path":"https://insightsengineering.github.io/tern.gee/reference/tabulate_gee.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Tabulation of a GEE Model ‚Äî tabulate_gee","text":".rtable(tern_gee): Extracts coefficient table covariance matrix estimate tern_gee object. s_lsmeans_logistic(): Statistics function extracts estimates lsmeans() data frame based logistic GEE model. a_lsmeans_logistic(): Formatted Analysis function can customized calling rtables::make_afun() . used afun rtables::analyze(). summarize_gee_logistic(): Analyze function tabulating least-squares means estimates logistic GEE least square mean results.","code":""},{"path":"https://insightsengineering.github.io/tern.gee/reference/tabulate_gee.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Tabulation of a GEE Model ‚Äî tabulate_gee","text":"","code":"library(dplyr) #>  #> Attaching package: ‚Äòdplyr‚Äô #> The following object is masked from ‚Äòpackage:testthat‚Äô: #>  #>     matches #> The following objects are masked from ‚Äòpackage:stats‚Äô: #>  #>     filter, lag #> The following objects are masked from ‚Äòpackage:base‚Äô: #>  #>     intersect, setdiff, setequal, union  df <- fev_data %>%   mutate(AVAL = as.integer(fev_data$FEV1 > 30)) df_counts <- df %>%   select(USUBJID, ARMCD) %>%   unique()  lsmeans_df <- lsmeans(fit_gee(vars = vars_gee(arm = \"ARMCD\"), data = df))  s_lsmeans_logistic(lsmeans_df[1, ], .in_ref_col = TRUE) #> $n #> [1] 420 #>  #> $adj_prop_se #> [1] 0.88390403 0.01948562 #>  #> $adj_prop_ci #> [1] 0.8399374 0.9169873 #> attr(,\"label\") #> [1] \"95% CI\" #>  #> $odds_ratio_est #> character(0) #>  #> $odds_ratio_ci #> character(0) #> attr(,\"label\") #> [1] \"95% CI\" #>  #> $log_odds_ratio_est #> character(0) #>  #> $log_odds_ratio_ci #> character(0) #> attr(,\"label\") #> [1] \"95% CI\" #>   s_lsmeans_logistic(lsmeans_df[2, ], .in_ref_col = FALSE) #> $n #> [1] 380 #>  #> $adj_prop_se #> [1] 0.94325891 0.01386798 #>  #> $adj_prop_ci #> [1] 0.9091248 0.9650644 #> attr(,\"label\") #> [1] \"95% CI\" #>  #> $odds_ratio_est #> [1] 2.18346 #>  #> $odds_ratio_ci #> [1] 1.163338 4.098119 #> attr(,\"label\") #> [1] \"95% CI\" #>  #> $log_odds_ratio_est #> [1] 0.7809108 #>  #> $log_odds_ratio_ci #> [1] 0.1512935 1.4105281 #> attr(,\"label\") #> [1] \"95% CI\" #>  basic_table() %>%   split_cols_by(\"ARMCD\") %>%   add_colcounts() %>%   summarize_gee_logistic(     .in_ref_col = FALSE   ) %>%   build_table(lsmeans_df, alt_counts_df = df_counts) #>                                     PBO            TRT      #>                                   (N=105)         (N=95)    #> ‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî #> n                                   420            380      #> Adjusted Mean Proportion (SE)   0.88 (0.02)    0.94 (0.01)  #>   95% CI                        (0.84, 0.92)   (0.91, 0.97) #> Odds Ratio                           NA            2.18     #>   95% CI                             NA        (1.16, 4.10) #> Log Odds Ratio                       NA            0.78     #>   95% CI                             NA        (0.15, 1.41)"},{"path":"https://insightsengineering.github.io/tern.gee/reference/tern.gee-package.html","id":null,"dir":"Reference","previous_headings":"","what":"tern.gee Package ‚Äî tern.gee-package","title":"tern.gee Package ‚Äî tern.gee-package","text":"Create tables graphs GEE model fits.","code":""},{"path":[]},{"path":"https://insightsengineering.github.io/tern.gee/reference/tern.gee-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"tern.gee Package ‚Äî tern.gee-package","text":"Maintainer: Daniel Saban√©s Bov√© daniel.sabanes_bove@roche.com Authors: Joe Zhu joe.zhu@roche.com Emily de la Rua emily.de_la_rua@contractors.roche.com contributors: F. Hoffmann-La Roche AG [copyright holder, funder]","code":""},{"path":"https://insightsengineering.github.io/tern.gee/reference/vars_gee.html","id":null,"dir":"Reference","previous_headings":"","what":"Set Variables to Use in GEE Model ‚Äî vars_gee","title":"Set Variables to Use in GEE Model ‚Äî vars_gee","text":"Set Variables Use GEE Model","code":""},{"path":"https://insightsengineering.github.io/tern.gee/reference/vars_gee.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Set Variables to Use in GEE Model ‚Äî vars_gee","text":"","code":"vars_gee(   response = \"AVAL\",   covariates = c(),   id = \"USUBJID\",   arm = \"ARM\",   visit = \"AVISIT\" )"},{"path":"https://insightsengineering.github.io/tern.gee/reference/vars_gee.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Set Variables to Use in GEE Model ‚Äî vars_gee","text":"response (character) name response variable. covariates (character) vector names variables use covariates. id (character) name variable use identify unique IDs. arm (character) name arm variable. visit (character) name visit variable.","code":""},{"path":"https://insightsengineering.github.io/tern.gee/reference/vars_gee.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Set Variables to Use in GEE Model ‚Äî vars_gee","text":"list variables can used vars argument fit_gee().","code":""},{"path":"https://insightsengineering.github.io/tern.gee/reference/vars_gee.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Set Variables to Use in GEE Model ‚Äî vars_gee","text":"","code":"vars_gee() #> $response #> [1] \"AVAL\" #>  #> $covariates #> NULL #>  #> $id #> [1] \"USUBJID\" #>  #> $arm #> [1] \"ARM\" #>  #> $visit #> [1] \"AVISIT\" #>   vars_gee(   response = \"CHG\",   covariates = c(\"SEX\", \"RACE\"),   id = \"SUBJID\",   arm = \"ARMCD\",   visit = \"AVISITN\" ) #> $response #> [1] \"CHG\" #>  #> $covariates #> [1] \"SEX\"  \"RACE\" #>  #> $id #> [1] \"SUBJID\" #>  #> $arm #> [1] \"ARMCD\" #>  #> $visit #> [1] \"AVISITN\" #>"},{"path":"https://insightsengineering.github.io/tern.gee/news/index.html","id":"terngee-013","dir":"Changelog","previous_headings":"","what":"tern.gee 0.1.3","title":"tern.gee 0.1.3","text":"CRAN release: 2023-12-12 Added badges README. Minor updates including package description.","code":""},{"path":"https://insightsengineering.github.io/tern.gee/news/index.html","id":"terngee-010","dir":"Changelog","previous_headings":"","what":"tern.gee 0.1.0","title":"tern.gee 0.1.0","text":"First release. Updated pkgdown site, introduction vignette, README, added unit tests. Added examples fit_gee, lsmeans, s_lsmeans_logistic, summarize_gee_logistic.","code":""}]
